apiVersion: v1
kind: Namespace
metadata:
  name: ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-service-account
  namespace: ingress
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ingress-cluster-role-binding
  namespace: ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: ingress-service-account
    namespace: ingress
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ingress-controller
  namespace: ingress
  labels:
    app: ingress-controller
spec:
  selector:
    matchLabels:
      app: ingress-controller
  template:
    metadata:
      labels:
        app: ingress-controller
    spec:
      serviceAccountName: ingress-service-account
      terminationGracePeriodSeconds: 10
      containers:
        - name: ingress-controller
          image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.15
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
          ports:
            - hostPort: 80
              containerPort: 80
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace    
          args:
            - /nginx-ingress-controller
            - --default-backend-service=kube-system/default-http-backend
            - --ingress-class=nginx
            - --v=2
---            
apiVersion: v1
kind: Service
metadata:
  namespace: ingress
  name: loadbalancer
  labels:
    app: loadbalancer
spec:
  type: LoadBalancer
  ports:
    - port: 80
      name: http
      targetPort: 80
  selector:
    app: ingress-controller
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: logging  
  name: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: kibana
          servicePort: 5601